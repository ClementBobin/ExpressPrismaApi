name: Build Docker Image for Production

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # 🧩 Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 🧰 Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🧱 Cache Docker layers for faster rebuilds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 🪣 Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 🏗️ Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/express-api:latest
          echo "Building $IMAGE_NAME ..."
          docker build \
            --file Dockerfile \
            --tag $IMAGE_NAME \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            .
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 🚀 Push Docker image to GHCR
      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/express-api:latest
          echo "Pushing $IMAGE_NAME ..."
          docker push $IMAGE_NAME

      # 📏 Show final image size
      - name: Show image size
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/express-api:latest
          echo "Image size:"
          docker images $IMAGE_NAME --format "{{.Repository}}:{{.Tag}} -> {{.Size}}"
